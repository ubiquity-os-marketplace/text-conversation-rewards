name: Compute Rewards

on:
  workflow_dispatch:
    inputs:
      stateId:
        description: "State Id"
      eventName:
        description: "Event Name"
      eventPayload:
        description: "Event Payload"
      settings:
        description: "Settings"
      authToken:
        description: "Auth Token"
      ref:
        description: "Ref"
      signature:
        description: "Payload signature from the kernel"
      command:
        description: "Command"

jobs:
  compute:
    name: Rewards
    runs-on: ubuntu-latest
    permissions: write-all
    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PLUGIN_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      X25519_PRIVATE_KEY: ${{ secrets.X25519_PRIVATE_KEY }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      NFT_MINTER_PRIVATE_KEY: ${{ secrets.NFT_MINTER_PRIVATE_KEY }}
      NFT_CONTRACT_ADDRESS: ${{ secrets.NFT_CONTRACT_ADDRESS }}
      PERMIT_FEE_RATE: ${{ secrets.PERMIT_FEE_RATE }}
      PERMIT_TREASURY_GITHUB_USERNAME: ${{ secrets.PERMIT_TREASURY_GITHUB_USERNAME }}
      PERMIT_ERC20_TOKENS_NO_FEE_WHITELIST: ${{ secrets.PERMIT_ERC20_TOKENS_NO_FEE_WHITELIST }}
      KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}
      LOG_LEVEL: ${{ secrets.LOG_LEVEL }}

    steps:
      # Note: the checkout could potentially be avoided by calling the workflow on the repo/branch directly.
      # However, this would mean that we would be unable to call it from the branch specified in ubiquity-os-config
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run compute rewards
        uses: ./
