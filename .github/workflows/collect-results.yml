name: Bun GitHub Action

on:
  workflow_dispatch:
    inputs:
      organization:
        description: "Organization to parse (e.g. ubiquity-os-marketplace). Leave empty to run for ubiquity organizations."
        required: false
        type: string
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        organization: ${{ fromJson(github.event.inputs.organization && format('["{0}"]', github.event.inputs.organization) || '["ubiquity", "ubiquity-os", "ubiquity-os-marketplace"]') }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PLUGIN_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      X25519_PRIVATE_KEY: ${{ secrets.X25519_PRIVATE_KEY }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      NFT_MINTER_PRIVATE_KEY: ${{ secrets.NFT_MINTER_PRIVATE_KEY }}
      NFT_CONTRACT_ADDRESS: ${{ secrets.NFT_CONTRACT_ADDRESS }}
      PERMIT_FEE_RATE: ${{ secrets.PERMIT_FEE_RATE }}
      PERMIT_TREASURY_GITHUB_USERNAME: ${{ secrets.PERMIT_TREASURY_GITHUB_USERNAME }}
      PERMIT_ERC20_TOKENS_NO_FEE_WHITELIST: ${{ secrets.PERMIT_ERC20_TOKENS_NO_FEE_WHITELIST }}
      KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}
      LOG_LEVEL: "info"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Start server
        run: |
          bun run server &
          sleep 3s
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{
              "ownerRepo": "${{ matrix.organization }}",
              "useOpenAi": true,
              "useCache": true
            }' \
            http://localhost:4000

      - name: Generate Rewards Summary
        run: bun run scripts/generate-rewards-summary.ts

      - name: Output Rewards Summary
        run: echo "$(< rewards-summary.md)" >> $GITHUB_STEP_SUMMARY

      - name: Zip results folder for ${{ matrix.organization }}
        run: |
          mkdir -p results
          zip -r results-${{ matrix.organization }}.zip results/

      - name: Upload results artifact for ${{ matrix.organization }}
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ matrix.organization }}
          path: |
            results-${{ matrix.organization }}.zip
            invalid-issues.json
