import { promises as fs } from "node:fs";
import path from "node:path";
import YAML from "yaml";

export async function getPayload(ownerRepo: string, issueId: number, useOpenAi: boolean, useCache: boolean) {
  const filePath = path.resolve(__dirname, "../.ubiquity-os.config.yml");
  const fileContent = await fs.readFile(filePath, "utf8");
  const cfgFile = YAML.parse(fileContent);
  const [owner, repo] = ownerRepo.split("/");

  if (!useOpenAi) {
    cfgFile.incentives.contentEvaluator.openAi = {
      ...cfgFile.incentives.contentEvaluator.openAi,
      endpoint: "http://localhost:4000/openai",
    };
  }

  return {
    ref: "http://localhost",
    stateId: "1234",
    signature: "",
    eventName: "issues.closed",
    action: "closed",
    env: process.env,
    command: null,
    settings: {
      ...cfgFile,
      evmPrivateEncrypted: cfgFile.evmPrivateEncrypted ?? process.env.EVM_PRIVATE_ENCRYPTED,
      ...(useCache && { useCache }),
    },
    authToken: process.env.GITHUB_TOKEN,
    eventPayload: {
      issue: {
        state_reason: "completed",
        url: `https://api.github.com/repos/${ownerRepo}/issues/${issueId}`,
        repository_url: `https://api.github.com/repos/${ownerRepo}`,
        labels_url: `https://api.github.com/repos/${ownerRepo}/issues/${issueId}/labels{/name}`,
        comments_url: `https://api.github.com/repos/${ownerRepo}/issues/${issueId}/comments`,
        events_url: `https://api.github.com/repos/${ownerRepo}/issues/${issueId}/events`,
        html_url: `https://github.com/${ownerRepo}/issues/${issueId}`,
        id: issueId,
        node_id: "MDU6SXNzdWUx",
        number: issueId,
        title: "Found a bug",
        user: {
          login: "ubiquity-os",
          id: 1,
          node_id: "MDQ6VXNlcjE=",
          avatar_url: "https://github.com/images/error/ubiquity-os_happy.gif",
          gravatar_id: "",
          url: "https://api.github.com/users/ubiquity-os",
          html_url: "https://github.com/ubiquity-os",
          followers_url: "https://api.github.com/users/ubiquity-os/followers",
          following_url: "https://api.github.com/users/ubiquity-os/following{/other_user}",
          gists_url: "https://api.github.com/users/ubiquity-os/gists{/gist_id}",
          starred_url: "https://api.github.com/users/ubiquity-os/starred{/owner}{/repo}",
          subscriptions_url: "https://api.github.com/users/ubiquity-os/subscriptions",
          organizations_url: "https://api.github.com/users/ubiquity-os/orgs",
          repos_url: "https://api.github.com/users/ubiquity-os/repos",
          events_url: "https://api.github.com/users/ubiquity-os/events{/privacy}",
          received_events_url: "https://api.github.com/users/ubiquity-os/received_events",
          type: "User",
          site_admin: false,
        },
        state: "closed",
        locked: false,
        assignee: {
          login: "ubiquity-os",
          id: 1,
          node_id: "MDQ6VXNlcjE=",
          avatar_url: "https://github.com/images/error/ubiquity-os_happy.gif",
          gravatar_id: "",
          url: "https://api.github.com/users/ubiquity-os",
          html_url: "https://github.com/ubiquity-os",
          followers_url: "https://api.github.com/users/ubiquity-os/followers",
          following_url: "https://api.github.com/users/ubiquity-os/following{/other_user}",
          gists_url: "https://api.github.com/users/ubiquity-os/gists{/gist_id}",
          starred_url: "https://api.github.com/users/ubiquity-os/starred{/owner}{/repo}",
          subscriptions_url: "https://api.github.com/users/ubiquity-os/subscriptions",
          organizations_url: "https://api.github.com/users/ubiquity-os/orgs",
          repos_url: "https://api.github.com/users/ubiquity-os/repos",
          events_url: "https://api.github.com/users/ubiquity-os/events{/privacy}",
          received_events_url: "https://api.github.com/users/ubiquity-os/received_events",
          type: "User",
          site_admin: false,
        },
        labels: [
          {
            id: 208045946,
            node_id: "MDU6TGFiZWwyMDgwNDU5NDY=",
            url: `https://api.github.com/repos/${ownerRepo}/labels/bug`,
            name: "bug",
            description: "Something isn't working",
            color: "f29513",
            default: true,
          },
        ],
        comments: 0,
        created_at: "2011-04-22T13:33:48Z",
        updated_at: "2011-04-22T13:33:48Z",
        closed_at: "2011-04-22T13:33:48Z",
        author_association: "OWNER",
        body: "I'm having a problem with this.",
      },
      repository: {
        id: 1296269,
        node_id: `MDEwOlJlcG9zaXRvcnkxMjk2MjY5`,
        name: repo,
        full_name: ownerRepo,
        owner: {
          login: owner,
          id: 159901852,
          node_id: `MDQ6VXNlcjE=`,
          avatar_url: `https://github.com/images/error/${owner}_happy.gif`,
          gravatar_id: ``,
          url: `https://api.github.com/users/${owner}`,
          html_url: `https://github.com/${owner}`,
          followers_url: `https://api.github.com/users/${owner}/followers`,
          following_url: `https://api.github.com/users/${owner}/following{/other_user}`,
          gists_url: `https://api.github.com/users/${owner}/gists{/gist_id}`,
          starred_url: `https://api.github.com/users/${owner}/starred{/owner}{/repo}`,
          subscriptions_url: `https://api.github.com/users/${owner}/subscriptions`,
          organizations_url: `https://api.github.com/users/${owner}/orgs`,
          repos_url: `https://api.github.com/users/${owner}/repos`,
          events_url: `https://api.github.com/users/${owner}/events{/privacy}`,
          received_events_url: `https://api.github.com/users/${owner}/received_events`,
          type: `User`,
          site_admin: false,
        },
        private: false,
        html_url: `https://github.com/${ownerRepo}`,
        description: `This your first repo!`,
        fork: false,
        url: `https://api.github.com/repos/${ownerRepo}`,
        archive_url: `https://api.github.com/repos/${ownerRepo}/{archive_format}{/ref}`,
        assignees_url: `https://api.github.com/repos/${ownerRepo}/assignees{/user}`,
        blobs_url: `https://api.github.com/repos/${ownerRepo}/git/blobs{/sha}`,
        branches_url: `https://api.github.com/repos/${ownerRepo}/branches{/branch}`,
        collaborators_url: `https://api.github.com/repos/${ownerRepo}/collaborators{/collaborator}`,
        comments_url: `https://api.github.com/repos/${ownerRepo}/comments{/number}`,
        commits_url: `https://api.github.com/repos/${ownerRepo}/commits{/sha}`,
        compare_url: `https://api.github.com/repos/${ownerRepo}/compare/{base}...{head}`,
        contents_url: `https://api.github.com/repos/${ownerRepo}/contents/{+path}`,
        contributors_url: `https://api.github.com/repos/${ownerRepo}/contributors`,
        deployments_url: `https://api.github.com/repos/${ownerRepo}/deployments`,
        downloads_url: `https://api.github.com/repos/${ownerRepo}/downloads`,
        events_url: `https://api.github.com/repos/${ownerRepo}/events`,
        forks_url: `https://api.github.com/repos/${ownerRepo}/forks`,
        git_commits_url: `https://api.github.com/repos/${ownerRepo}/git/commits{/sha}`,
        git_refs_url: `https://api.github.com/repos/${ownerRepo}/git/refs{/sha}`,
        git_tags_url: `https://api.github.com/repos/${ownerRepo}/git/tags{/sha}`,
        git_url: `git:github.com/${ownerRepo}.git`,
        issue_comment_url: `https://api.github.com/repos/${ownerRepo}/issues/comments{/number}`,
        issue_events_url: `https://api.github.com/repos/${ownerRepo}/issues/events{/number}`,
        issues_url: `https://api.github.com/repos/${ownerRepo}/issues{/number}`,
        keys_url: `https://api.github.com/repos/${ownerRepo}/keys{/key_id}`,
        labels_url: `https://api.github.com/repos/${ownerRepo}/labels{/name}`,
        languages_url: `https://api.github.com/repos/${ownerRepo}/languages`,
        merges_url: `https://api.github.com/repos/${ownerRepo}/merges`,
        milestones_url: `https://api.github.com/repos/${ownerRepo}/milestones{/number}`,
        notifications_url: `https://api.github.com/repos/${ownerRepo}/notifications{?since,all,participating}`,
        pulls_url: `https://api.github.com/repos/${ownerRepo}/pulls{/number}`,
        releases_url: `https://api.github.com/repos/${ownerRepo}/releases{/id}`,
        stargazers_url: `https://api.github.com/repos/${ownerRepo}/stargazers`,
        statuses_url: `https://api.github.com/repos/${ownerRepo}/statuses/{sha}`,
        subscribers_url: `https://api.github.com/repos/${ownerRepo}/subscribers`,
        subscription_url: `https://api.github.com/repos/${ownerRepo}/subscription`,
        tags_url: `https://api.github.com/repos/${ownerRepo}/tags`,
        teams_url: `https://api.github.com/repos/${ownerRepo}/teams`,
        trees_url: `https://api.github.com/repos/${ownerRepo}/git/trees{/sha}`,
        homepage: `https://github.com`,
        language: null,
        forks_count: 9,
        stargazers_count: 80,
        watchers_count: 80,
        size: 108,
        default_branch: "master",
        open_issues_count: 0,
        is_template: false,
        topics: [],
        has_issues: true,
        has_projects: true,
        has_wiki: true,
        has_pages: false,
        has_downloads: true,
        archived: false,
        disabled: false,
        visibility: "public",
        pushed_at: "2011-01-26T19:06:43Z",
        created_at: "2011-01-26T19:01:12Z",
        updated_at: "2011-01-26T19:14:43Z",
        permissions: {
          admin: false,
          maintain: false,
          push: false,
          triage: false,
          pull: true,
        },
        allow_rebase_merge: true,
        temp_clone_token: "",
        allow_squash_merge: true,
        allow_auto_merge: false,
        delete_branch_on_merge: true,
        allow_merge_commit: true,
        subscribers_count: 42,
        network_count: 0,
      },
      sender: {
        login: "ubiquity-os",
        id: 159901852,
        node_id: "MDQ6VXNlcjE=",
        avatar_url: "https://github.com/images/error/ubiquity-os_happy.gif",
        gravatar_id: "",
        url: "https://api.github.com/users/ubiquity-os",
        html_url: "https://github.com/ubiquity-os",
        followers_url: "https://api.github.com/users/ubiquity-os/followers",
        following_url: "https://api.github.com/users/ubiquity-os/following{/other_user}",
        gists_url: "https://api.github.com/users/ubiquity-os/gists{/gist_id}",
        starred_url: "https://api.github.com/users/ubiquity-os/starred{/owner}{/repo}",
        subscriptions_url: "https://api.github.com/users/ubiquity-os/subscriptions",
        organizations_url: "https://api.github.com/users/ubiquity-os/orgs",
        repos_url: "https://api.github.com/users/ubiquity-os/repos",
        events_url: "https://api.github.com/users/ubiquity-os/events{/privacy}",
        received_events_url: "https://api.github.com/users/ubiquity-os/received_events",
        type: "User",
        site_admin: false,
      },
    },
  };
}
